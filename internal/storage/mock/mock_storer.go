// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Mr-Punder/go-alerting-service/internal/interfaces (interfaces: MetricsStorer)

// Package mock_interfaces is a generated GoMock package.
package mock_interfaces

import (
	reflect "reflect"

	metrics "github.com/Mr-Punder/go-alerting-service/internal/metrics"
	gomock "github.com/golang/mock/gomock"
)

// MockMetricsStorer is a mock of MetricsStorer interface.
type MockMetricsStorer struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsStorerMockRecorder
}

// MockMetricsStorerMockRecorder is the mock recorder for MockMetricsStorer.
type MockMetricsStorerMockRecorder struct {
	mock *MockMetricsStorer
}

// NewMockMetricsStorer creates a new mock instance.
func NewMockMetricsStorer(ctrl *gomock.Controller) *MockMetricsStorer {
	mock := &MockMetricsStorer{ctrl: ctrl}
	mock.recorder = &MockMetricsStorerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsStorer) EXPECT() *MockMetricsStorerMockRecorder {
	return m.recorder
}

// DeleteGouge mocks base method.
func (m *MockMetricsStorer) DeleteGouge(arg0 metrics.Metrics) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteGouge", arg0)
}

// DeleteGouge indicates an expected call of DeleteGouge.
func (mr *MockMetricsStorerMockRecorder) DeleteGouge(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteGouge", reflect.TypeOf((*MockMetricsStorer)(nil).DeleteGouge), arg0)
}

// Get mocks base method.
func (m *MockMetricsStorer) Get(arg0 metrics.Metrics) (metrics.Metrics, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(metrics.Metrics)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockMetricsStorerMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockMetricsStorer)(nil).Get), arg0)
}

// GetAll mocks base method.
func (m *MockMetricsStorer) GetAll() map[string]metrics.Metrics {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].(map[string]metrics.Metrics)
	return ret0
}

// GetAll indicates an expected call of GetAll.
func (mr *MockMetricsStorerMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockMetricsStorer)(nil).GetAll))
}

// Set mocks base method.
func (m *MockMetricsStorer) Set(arg0 metrics.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockMetricsStorerMockRecorder) Set(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockMetricsStorer)(nil).Set), arg0)
}
